name: Build Windows Standalone

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-standalone:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download JUCE 6.1.6 (Fixed)
      run: |
        Write-Host "Downloading JUCE 6.1.6 for standalone build..."
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip"
        Expand-Archive juce.zip -DestinationPath . -Force
        
        # FIXED: Remove existing JUCE directory first (from search result [3])
        if (Test-Path "JUCE") { 
          Write-Host "Removing existing JUCE directory..."
          Remove-Item JUCE -Recurse -Force 
        }
        
        # FIXED: Move with error handling
        try {
          Move-Item JUCE-6.1.6 JUCE -Force
          Write-Host "✅ JUCE setup completed successfully"
        } catch {
          Write-Host "❌ Move failed: $_"
          Write-Host "Trying alternative approach..."
          # Alternative: Copy instead of move
          Copy-Item JUCE-6.1.6 JUCE -Recurse -Force
          Remove-Item JUCE-6.1.6 -Recurse -Force
        }
        
    - name: Verify CMakeLists.txt Format
      run: |
        $content = Get-Content CMakeLists.txt -Raw
        if ($content -match "FORMATS Standalone") {
          Write-Host "✅ CMakeLists.txt configured for Standalone"
        } else {
          Write-Host "❌ CMakeLists.txt not configured for Standalone"
          exit 1
        }
        
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      
    - name: Configure CMake for Standalone
      run: |
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
        
    - name: Build Standalone Application
      run: |
        cmake --build build --config Release --target FootstepDetector_Standalone
        
    - name: Verify Standalone EXE Created
      run: |
        $exePath = "build\FootstepDetector_artefacts\Release\Standalone\FootstepDetector.exe"
        if (Test-Path $exePath) {
          Write-Host "✅ FootstepDetector.exe created successfully"
          Get-Item $exePath | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Host "❌ FootstepDetector.exe not found"
          Write-Host "Searching for any .exe files:"
          Get-ChildItem build -Recurse -Name "*.exe"
          exit 1
        }
        
    - name: Upload Windows Standalone EXE
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-Windows-Standalone-EXE
        path: build/FootstepDetector_artefacts/Release/Standalone/FootstepDetector.exe
        
    - name: Create Client Package
      run: |
        mkdir FootstepDetector_Client_Ready
        copy build\FootstepDetector_artefacts\Release\Standalone\FootstepDetector.exe FootstepDetector_Client_Ready\
        echo "FootstepDetector Standalone Application" > FootstepDetector_Client_Ready\README.txt
        echo "Double-click FootstepDetector.exe to run" >> FootstepDetector_Client_Ready\README.txt
        echo "No installation required!" >> FootstepDetector_Client_Ready\README.txt
        
    - name: Upload Client Package
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-Client-Ready
        path: FootstepDetector_Client_Ready/