name: Build Windows VST2
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Download JUCE 6.1.6 and VST2 SDK
      run: |
        Write-Host "=== DOWNLOADING JUCE 6.1.6 AND VST2 SDK ==="
        
        if (Test-Path "JUCE") {
          Remove-Item -Recurse -Force "JUCE"
        }
        
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip"
        Expand-Archive -Path "juce.zip" -DestinationPath "."
        Rename-Item "JUCE-6.1.6" "JUCE"
        Remove-Item "juce.zip"
        
        Invoke-WebRequest -Uri "https://archive.org/download/VST2SDK/vst_sdk2_4_rev2.zip" -OutFile "vst2_sdk.zip"
        Expand-Archive -Path "vst2_sdk.zip" -DestinationPath "."
        Remove-Item "vst2_sdk.zip"
        
        $sdkFolder = Get-ChildItem -Directory | Where-Object { $_.Name -like "*vst*" -or $_.Name -like "*VST*" } | Select-Object -First 1
        if ($sdkFolder) {
          Rename-Item $sdkFolder.Name "VST2_SDK"
          Write-Host "✅ VST2 SDK ready"
        }
        
        # Verify source files are in VST2_SDK/Source (as found in debug)
        if (Test-Path "VST2_SDK/Source/PluginProcessor.cpp") {
          Write-Host "✅ Source files found in VST2_SDK/Source/"
        } else {
          Write-Host "❌ Source files not in expected VST2_SDK/Source/ location"
        }
        
    - name: Configure CMake with VST2 SDK
      run: |
        Write-Host "=== CMAKE CONFIGURATION WITH VST2 SDK ==="
        $vst2Path = (Resolve-Path "VST2_SDK").Path
        Write-Host "VST2 SDK path: $vst2Path"
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DVST2_SDK_PATH="$vst2Path"
    
    - name: Build VST2
      run: |
        Write-Host "=== BUILDING VST2 DLL ==="
        cmake --build build --config Release --target FootstepDetector_VST --verbose
        
    - name: Find and package VST2
      run: |
        Write-Host "=== VST2 DLL SEARCH ==="
        Get-ChildItem -Recurse build/ -Name "*.dll" | Where-Object { $_ -like "*FootstepDetector*" } | ForEach-Object { Write-Host "Found DLL: $_" }
        
        New-Item -ItemType Directory -Force -Path package
        
        # Look for VST2 DLL in multiple locations
        $dllPaths = @(
          "build/FootstepDetector_artefacts/Release/VST/FootstepDetector.dll",
          "build/Release/VST/FootstepDetector.dll",
          "build/FootstepDetector_artefacts/VST/Release/FootstepDetector.dll"
        )
        
        $found = $false
        foreach ($path in $dllPaths) {
          if (Test-Path $path) {
            Write-Host "✅ Found VST2 DLL at: $path"
            Copy-Item $path package/
            $found = $true
            break
          }
        }
        
        if (-not $found) {
          Write-Host "❌ VST2 DLL not found - searching all DLLs:"
          Get-ChildItem -Recurse build/ -Name "*.dll" | ForEach-Object { Write-Host "Found DLL: $_" }
          
          # Check if any FootstepDetector DLL exists
          $anyDll = Get-ChildItem -Recurse build/ -Name "*FootstepDetector*.dll" | Select-Object -First 1
          if ($anyDll) {
            Write-Host "✅ Found FootstepDetector DLL at: $($anyDll.FullName)"
            Copy-Item $anyDll.FullName package/FootstepDetector.dll
            $found = $true
          }
        }
        
        if (-not $found) {
          New-Item -Path "package/VST2_BUILD_FAILED.txt" -Value "VST2 build completed but DLL not found" -Force
        }
        
    - name: Upload VST2 DLL
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-VST2-EqualizerAPO-FINAL
        path: package/
        retention-days: 30
