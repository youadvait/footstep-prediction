name: Build Windows VST2
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history
        clean: true     # Clean workspace
        
    - name: MAXIMUM DEBUG - Project Structure
      run: |
        Write-Host "=== MAXIMUM PROJECT STRUCTURE DEBUG ==="
        Write-Host "Current directory: $(Get-Location)"
        Write-Host ""
        Write-Host "ALL FILES AND DIRECTORIES:"
        Get-ChildItem -Recurse -Force | Select-Object -First 30 | ForEach-Object { 
          $type = if ($_.PSIsContainer) { "DIR " } else { "FILE" }
          Write-Host "$type $($_.FullName)"
        }
        
        Write-Host ""
        Write-Host "SEARCHING FOR vst_plugin:"
        if (Test-Path "vst_plugin") {
          Write-Host "✅ vst_plugin EXISTS"
          Get-ChildItem "vst_plugin" -Recurse | ForEach-Object {
            $type = if ($_.PSIsContainer) { "DIR " } else { "FILE" }
            Write-Host "  $type $($_.FullName)"
          }
        } else {
          Write-Host "❌ vst_plugin MISSING"
        }
        
        Write-Host ""
        Write-Host "SEARCHING FOR .cpp FILES ANYWHERE:"
        Get-ChildItem -Recurse -Filter "*.cpp" | ForEach-Object { Write-Host "FOUND CPP: $($_.FullName)" }
        
        Write-Host ""
        Write-Host "CHECKING GIT STATUS:"
        git status
        Write-Host ""
        Write-Host "GIT LS-FILES:"
        git ls-files | Sort-Object
        
        Write-Host ""
        Write-Host "DIRECT FILE CHECK:"
        $files = @(
          "vst_plugin/Source/PluginProcessor.cpp",
          "vst_plugin/Source/PluginEditor.cpp", 
          "vst_plugin/Source/FootstepClassifier.cpp"
        )
        foreach ($file in $files) {
          if (Test-Path $file) {
            Write-Host "✅ EXISTS: $file"
            Write-Host "   Size: $((Get-Item $file).Length) bytes"
          } else {
            Write-Host "❌ MISSING: $file"
          }
        }
      
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Download JUCE 6.1.6 and VST2 SDK
      run: |
        Write-Host "=== DOWNLOADING JUCE 6.1.6 AND VST2 SDK ==="
        
        if (Test-Path "JUCE") {
          Remove-Item -Recurse -Force "JUCE"
        }
        
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip"
        Expand-Archive -Path "juce.zip" -DestinationPath "."
        Rename-Item "JUCE-6.1.6" "JUCE"
        Remove-Item "juce.zip"
        
        Invoke-WebRequest -Uri "https://archive.org/download/VST2SDK/vst_sdk2_4_rev2.zip" -OutFile "vst2_sdk.zip"
        Expand-Archive -Path "vst2_sdk.zip" -DestinationPath "."
        Remove-Item "vst2_sdk.zip"
        
        $sdkFolder = Get-ChildItem -Directory | Where-Object { $_.Name -like "*vst*" -or $_.Name -like "*VST*" } | Select-Object -First 1
        if ($sdkFolder) {
          Rename-Item $sdkFolder.Name "VST2_SDK"
          Write-Host "✅ VST2 SDK ready"
        }
        
    - name: Configure CMake ONLY if sources exist
      run: |
        Write-Host "=== PRE-CMAKE CHECK ==="
        
        $requiredFiles = @(
          "vst_plugin/Source/PluginProcessor.cpp",
          "vst_plugin/Source/PluginEditor.cpp",
          "vst_plugin/Source/FootstepClassifier.cpp"
        )
        
        $allExist = $true
        foreach ($file in $requiredFiles) {
          if (-not (Test-Path $file)) {
            Write-Host "❌ MISSING: $file"
            $allExist = $false
          } else {
            Write-Host "✅ FOUND: $file"
          }
        }
        
        if (-not $allExist) {
          Write-Host "❌ CANNOT PROCEED - Source files missing"
          Write-Host "Available .cpp files:"
          Get-ChildItem -Recurse -Filter "*.cpp" | ForEach-Object { Write-Host "  $($_.FullName)" }
          exit 1
        }
        
        Write-Host "✅ All source files found - proceeding with CMake"
        $vst2Path = (Resolve-Path "VST2_SDK").Path
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DVST2_SDK_PATH="$vst2Path"
    
    - name: Build VST2
      run: |
        Write-Host "=== BUILDING VST2 DLL ==="
        cmake --build build --config Release --target FootstepDetector_VST --verbose
        
    - name: Upload ALL debug info
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Debug-Complete-Structure
        path: |
          CMakeLists.txt
          .gitignore
        retention-days: 7
