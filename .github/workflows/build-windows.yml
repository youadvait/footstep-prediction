name: Build ML-Powered Windows VST3

on:
  push:
    branches: [ main, master, vst3-variation ]
  pull_request:
    branches: [ main, master, vst3-variation ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download JUCE 6.1.6 (Stable)
      run: |
        Write-Host "Downloading stable JUCE 6.1.6..."
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip" -TimeoutSec 60
        Expand-Archive juce.zip -DestinationPath . -Force
        if (Test-Path "JUCE") { Remove-Item JUCE -Recurse -Force }
        Move-Item JUCE-6.1.6 JUCE
        Write-Host "JUCE 6.1.6 setup completed"
        
    - name: Verify JUCE Installation
      run: |
        if (Test-Path "JUCE/extras/Build/CMake/JUCEModuleSupport.cmake") {
          Write-Host "✅ JUCEModuleSupport.cmake found"
        } else {
          Write-Host "❌ JUCEModuleSupport.cmake missing"
          exit 1
        }
        
    - name: Verify ML Classifier Files
      run: |
        $mlFiles = @(
          "vst_plugin/Source/MLFootstepClassifier.h",
          "vst_plugin/Source/MLFootstepClassifier.cpp",
          "vst_plugin/Source/PluginProcessor.h",
          "vst_plugin/Source/PluginProcessor.cpp",
          "vst_plugin/Source/PluginEditor.h",
          "vst_plugin/Source/PluginEditor.cpp"
        )
        foreach ($file in $mlFiles) {
          if (Test-Path $file) {
            Write-Host "✅ $file found"
            # Check for basic syntax issues
            $content = Get-Content $file -Raw
            if ($content -match "std::cout" -and $content -notmatch "#include.*iostream") {
              Write-Host "⚠️  Warning: $file uses std::cout but may be missing iostream include"
            }
          } else {
            Write-Host "❌ $file missing - build will fail"
            exit 1
          }
        }
        Write-Host "🤖 All source files verified"
        
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup CMake
      uses: lukka/get-cmake@latest
      
    - name: Configure CMake (Windows x64)
      run: |
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
        
    - name: Build ML-Powered VST3 Plugin
      run: |
        cmake --build build --config Release --parallel 2 --verbose
        
    - name: Verify ML-Enhanced Build Output
      run: |
        Write-Host "Checking build artifacts..."
        Get-ChildItem build -Recurse -Directory | Where-Object { $_.Name -like "*FootstepDetector*" } | ForEach-Object {
          Write-Host "Found directory: $($_.FullName)"
          Get-ChildItem $_.FullName -Recurse | ForEach-Object {
            Write-Host "  - $($_.Name)"
          }
        }
        
        # Check multiple possible VST3 locations
        $vst3Paths = @(
          "build/FootstepDetector_artefacts/Release/VST3/FootstepDetector.vst3",
          "build/FootstepDetector_VST3_artefacts/Release/VST3/FootstepDetector.vst3",
          "build/FootstepDetector_artefacts/VST3/FootstepDetector.vst3"
        )
        
        $vst3Found = $false
        foreach ($path in $vst3Paths) {
          Write-Host "Checking VST3 path: $path"
          if (Test-Path $path) {
            Write-Host "✅ ML-powered VST3 plugin built successfully at: $path"
            Write-Host "🤖 Plugin includes 97.5% accurate ML classifier"
            Get-ChildItem $path -Recurse | Select-Object Name, Length
            $env:VST3_PATH = $path
            $vst3Found = $true
            break
          }
        }
        
        if (-not $vst3Found) {
          Write-Host "❌ VST3 plugin not found in any expected location"
          Write-Host "Available build artifacts:"
          Get-ChildItem build -Recurse -File | Where-Object { $_.Extension -eq ".vst3" -or $_.Name -like "*FootstepDetector*" } | ForEach-Object {
            Write-Host "  - $($_.FullName)"
          }
          exit 1
        }
        
    - name: Upload ML-Enhanced Windows VST3 Artifact
      run: |
        $vst3Path = $env:VST3_PATH
        if (-not $vst3Path) {
          # Fallback search
          $vst3Path = Get-ChildItem build -Recurse -Directory | Where-Object { $_.Name -eq "FootstepDetector.vst3" } | Select-Object -First 1 -ExpandProperty FullName
        }
        
        if ($vst3Path) {
          Write-Host "Uploading VST3 from: $vst3Path"
          # Create upload using GitHub Actions artifact upload
          # Note: The actual upload will be handled by the upload-artifact action below
          echo "VST3_UPLOAD_PATH=$vst3Path" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
          Write-Host "❌ No VST3 found for upload"
          exit 1
        }
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-ML-Windows-x64-VST3
        path: ${{ env.VST3_UPLOAD_PATH }}
        
    - name: Create ML-Enhanced Release Package
      run: |
        $vst3Path = $env:VST3_UPLOAD_PATH
        if (-not $vst3Path) {
          Write-Host "❌ VST3 path not available for release package"
          exit 1
        }
        
        mkdir FootstepDetector_ML_Windows_Release
        robocopy $vst3Path FootstepDetector_ML_Windows_Release/FootstepDetector.vst3 /E
        if ($LASTEXITCODE -le 7) { $LASTEXITCODE = 0 }
        
        echo "FootstepDetector ML VST3 Plugin - Windows x64" > FootstepDetector_ML_Windows_Release/README.txt
        echo "🤖 ML-Powered Footstep Detection (97.5% Accuracy)" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "🎮 Optimized for Gaming Audio (COD, FPS games)" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "Features:" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "- Distinguishes footsteps from gunshots/airplanes" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "- Real-time ML inference (<5ms latency)" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "- Enhanced footstep amplification" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "- Aggressive noise reduction for non-footsteps" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "Installation:" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "1. Copy FootstepDetector.vst3 folder to: C:\Program Files\Common Files\VST3\" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "2. Restart your DAW/Audio software" >> FootstepDetector_ML_Windows_Release/README.txt
        echo "3. Plugin appears as: FootstepTech -> FootstepDetector ML" >> FootstepDetector_ML_Windows_Release/README.txt
        
    - name: Upload ML-Enhanced Release Package
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-ML-Windows-Complete
        path: FootstepDetector_ML_Windows_Release/