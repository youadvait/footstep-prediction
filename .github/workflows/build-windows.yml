name: Build Windows VST3
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug - Check project structure
      run: |
        Write-Host "=== PROJECT STRUCTURE DEBUG ==="
        Write-Host "Root files:"
        Get-ChildItem . -Name | Sort-Object | ForEach-Object { Write-Host "  - $_" }
        
        Write-Host ""
        Write-Host "JUCE check:"
        if (Test-Path "JUCE") {
          Write-Host "  ✅ JUCE exists"
          if (Test-Path "JUCE/CMakeLists.txt") {
            Write-Host "  ✅ JUCE/CMakeLists.txt exists"
            Write-Host "  JUCE CMakeLists.txt first 10 lines:"
            Get-Content "JUCE/CMakeLists.txt" -TotalCount 10 | ForEach-Object { Write-Host "    $_" }
          } else {
            Write-Host "  ❌ JUCE/CMakeLists.txt missing"
          }
        } else {
          Write-Host "  ❌ JUCE directory missing"
        }
        
        Write-Host ""
        Write-Host "Source files check:"
        if (Test-Path "vst_plugin/Source") {
          Get-ChildItem "vst_plugin/Source" -Name | ForEach-Object { Write-Host "  - vst_plugin/Source/$_" }
        } else {
          Write-Host "  ❌ vst_plugin/Source missing"
        }
        
        Write-Host ""
        Write-Host "CMakeLists.txt content:"
        if (Test-Path "CMakeLists.txt") {
          Get-Content "CMakeLists.txt" | ForEach-Object { Write-Host "  $_" }
        } else {
          Write-Host "  ❌ CMakeLists.txt missing"
        }
        
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Raw CMake test
      run: |
        Write-Host "=== RAW CMAKE TEST ==="
        Write-Host "CMake version:"
        cmake --version
        
        Write-Host ""
        Write-Host "Testing basic CMake syntax check:"
        cmake --check-system-vars 2>&1 | Write-Host
        
        Write-Host ""
        Write-Host "Testing project directory recognition:"
        if (Test-Path "CMakeLists.txt") {
          Write-Host "CMakeLists.txt exists, size: $((Get-Item 'CMakeLists.txt').Length) bytes"
        }
        
    - name: Configure CMake with FULL error capture
      run: |
        Write-Host "=== CMAKE CONFIGURATION WITH FULL ERROR CAPTURE ==="
        $ErrorActionPreference = "Continue"
        
        try {
          Write-Host "Running: cmake -B build -G `"Visual Studio 17 2022`" -A x64"
          $output = cmake -B build -G "Visual Studio 17 2022" -A x64 2>&1
          Write-Host "CMAKE OUTPUT:"
          $output | ForEach-Object { Write-Host $_ }
          
          if ($LASTEXITCODE -ne 0) {
            Write-Host ""
            Write-Host "❌ CMAKE FAILED with exit code: $LASTEXITCODE"
            Write-Host ""
            Write-Host "Full cmake output was:"
            $output | ForEach-Object { Write-Host "  $_" }
            exit 1
          } else {
            Write-Host "✅ CMAKE SUCCEEDED"
          }
          
        } catch {
          Write-Host "❌ CMAKE EXCEPTION: $($_.Exception.Message)"
          Write-Host "Exception details: $($_.Exception)"
          exit 1
        }
        
    - name: Build VST3 (if CMake succeeded)
      run: |
        Write-Host "=== VST3 BUILD ==="
        cmake --build build --config Release --target FootstepDetector_VST3
    
    - name: Find and package VST3
      run: |
        Write-Host "=== VST3 SEARCH ==="
        Get-ChildItem -Recurse build/ -Name "*.vst3" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host "Found: $_" }
        
        New-Item -ItemType Directory -Force -Path package
        $vst3Files = Get-ChildItem -Recurse build/ -Name "FootstepDetector.vst3" -ErrorAction SilentlyContinue
        if ($vst3Files.Count -gt 0) {
          Copy-Item -Recurse (Join-Path "build" $vst3Files[0]) package/
          Write-Host "✅ VST3 packaged"
        } else {
          Write-Host "❌ No VST3 found"
          New-Item -Path "package/NO_VST3_BUILT.txt" -Value "Build completed but no VST3 found" -Force
        }
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Windows-Build-Results
        path: package/
        retention-days: 7
