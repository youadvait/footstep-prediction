name: Build Windows VST2
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Download JUCE 6.1.6 and Create Complete VST2 SDK
      run: |
        Write-Host "=== DOWNLOADING JUCE 6.1.6 AND CREATING COMPLETE VST2 SDK ==="
        
        if (Test-Path "JUCE") {
          Remove-Item -Recurse -Force "JUCE"
        }
        
        # Download JUCE 6.1.6
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip"
        Expand-Archive -Path "juce.zip" -DestinationPath "."
        Rename-Item "JUCE-6.1.6" "JUCE"
        Remove-Item "juce.zip"
        
        # Create VST2 SDK directory structure
        New-Item -ItemType Directory -Force -Path "VST2_SDK/pluginterfaces/vst2.x"
        
        # Create complete aeffect.h with all required structures
        $aeffectContent = @"
#ifndef __aeffect__
#define __aeffect__

#ifdef __cplusplus
extern `"C`" {
#endif

enum {
    kEffectMagic = 'VstP'
};

enum {
    kVstVersion = 2400
};

typedef float VstParameterValue;
typedef long VstInt32;
typedef VstInt32 VstIntPtr;

// VstEvent structures (REQUIRED BY JUCE)
enum VstEventTypes {
    kVstMidiType = 1,
    kVstAudioType,
    kVstVideoType,
    kVstParameterType,
    kVstTriggerType,
    kVstSysExType
};

struct VstEvent {
    VstInt32 type;
    VstInt32 byteSize;
    VstInt32 deltaFrames;
    VstInt32 flags;
    char data[16];
};

struct VstMidiEvent {
    VstInt32 type;
    VstInt32 byteSize;
    VstInt32 deltaFrames;
    VstInt32 flags;
    VstInt32 noteLength;
    VstInt32 noteOffset;
    char midiData[4];
    char detune;
    char noteOffVelocity;
    char reserved1;
    char reserved2;
};

struct VstEvents {
    VstInt32 numEvents;
    VstIntPtr reserved;
    VstEvent* events[2];
};

// AEffect structure
struct AEffect {
    VstInt32 magic;
    VstIntPtr dispatcher;
    VstIntPtr process;
    VstIntPtr setParameter;
    VstIntPtr getParameter;
    VstInt32 numPrograms;
    VstInt32 numParams;
    VstInt32 numInputs;
    VstInt32 numOutputs;
    VstInt32 flags;
    VstIntPtr resvd1;
    VstIntPtr resvd2;
    VstInt32 initialDelay;
    VstInt32 realQualities;
    VstInt32 offQualities;
    float ioRatio;
    void* object;
    void* user;
    VstInt32 uniqueID;
    VstInt32 version;
    VstIntPtr processReplacing;
    VstIntPtr processDoubleReplacing;
    char future[56];
};

typedef AEffect* (*audioMasterCallback) (AEffect* effect, VstInt32 opcode, VstInt32 index, VstIntPtr value, void* ptr, float opt);

#ifdef __cplusplus
}
#endif

#endif
"@
        $aeffectContent | Out-File -FilePath "VST2_SDK/pluginterfaces/vst2.x/aeffect.h" -Encoding utf8
        
        # Create complete aeffectx.h
        $aeffectxContent = @"
#ifndef __aeffectx__
#define __aeffectx__

#include `"aeffect.h`"

#ifdef __cplusplus
extern `"C`" {
#endif

enum {
    effOpen = 0, effClose, effSetProgram, effGetProgram, effSetProgramName,
    effGetProgramName, effGetParamLabel, effGetParamDisplay, effGetParamName,
    effGetVu, effSetSampleRate, effSetBlockSize, effMainsChanged, effEditGetRect,
    effEditOpen, effEditClose, effEditDraw, effEditMouse, effEditKey, effEditIdle,
    effEditTop, effEditSleep, effIdentify, effGetChunk, effSetChunk, effProcessEvents,
    effCanBeAutomated, effString2Parameter, effGetNumProgramCategories,
    effGetProgramNameIndexed, effCopyProgram, effConnectInput, effConnectOutput,
    effGetInputProperties, effGetOutputProperties, effGetPlugCategory,
    effGetCurrentPosition, effGetDestinationBuffer, effOfflineNotify,
    effOfflinePrepare, effOfflineRun, effProcessVarIo, effSetSpeakerArrangement,
    effSetBlockSizeAndSampleRate, effSetBypass, effGetEffectName, effGetErrorText,
    effGetVendorString, effGetProductString, effGetVendorVersion, effVendorSpecific,
    effCanDo, effGetTailSize, effIdle, effGetIcon, effSetViewPosition,
    effGetParameterProperties, effKeysRequired, effGetVstVersion, effEditKeyDown,
    effEditKeyUp, effSetEditKnobMode, effGetMidiProgramName, effGetCurrentMidiProgram,
    effGetMidiProgramCategory, effHasMidiProgramsChanged, effGetMidiKeyName,
    effBeginSetProgram, effEndSetProgram, effGetSpeakerArrangement,
    effShellGetNextPlugin, effStartProcess, effStopProcess, effSetTotalSampleCount,
    effSetPanLaw, effBeginLoadBank, effBeginLoadProgram, effSetProcessPrecision,
    effGetNumMidiInputChannels, effGetNumMidiOutputChannels
};

// VstPlugin flags
enum VstAEffectFlags {
    effFlagsHasEditor = 1,
    effFlagsCanReplacing = 1 << 4,
    effFlagsProgramChunks = 1 << 5,
    effFlagsIsSynth = 1 << 8,
    effFlagsNoSoundInStop = 1 << 9,
    effFlagsCanDoubleReplacing = 1 << 12
};

#ifdef __cplusplus
}
#endif

#endif
"@
        $aeffectxContent | Out-File -FilePath "VST2_SDK/pluginterfaces/vst2.x/aeffectx.h" -Encoding utf8
        
        # Create vstfxstore.h
        $vstfxContent = @"
#ifndef __vstfxstore__
#define __vstfxstore__

#include `"aeffectx.h`"

#ifdef __cplusplus
extern `"C`" {
#endif

struct fxBank {
    VstInt32 chunkMagic;
    VstInt32 byteSize;
    VstInt32 fxMagic;
    VstInt32 version;
    VstInt32 fxID;
    VstInt32 fxVersion;
    VstInt32 numPrograms;
    char prgName[28];
    VstInt32 chunkSize;
};

struct fxProgram {
    VstInt32 chunkMagic;
    VstInt32 byteSize;
    VstInt32 fxMagic;
    VstInt32 version;
    VstInt32 fxID;
    VstInt32 fxVersion;
    VstInt32 numParams;
    char prgName[28];
};

#ifdef __cplusplus
}
#endif

#endif
"@
        $vstfxContent | Out-File -FilePath "VST2_SDK/pluginterfaces/vst2.x/vstfxstore.h" -Encoding utf8
        
        Write-Host "✅ Complete VST2 SDK headers created with all required structures"
        
    - name: Configure CMake with Complete VST2 SDK
      run: |
        Write-Host "=== CMAKE CONFIGURATION ==="
        $vst2Path = (Resolve-Path "VST2_SDK").Path
        Write-Host "VST2 SDK path: $vst2Path"
        
        # Verify complete headers exist
        if (Test-Path "VST2_SDK/pluginterfaces/vst2.x/aeffect.h") {
          Write-Host "✅ Complete VST2 headers ready"
          Write-Host "aeffect.h size: $((Get-Item 'VST2_SDK/pluginterfaces/vst2.x/aeffect.h').Length) bytes"
        } else {
          Write-Host "❌ VST2 headers missing"
          exit 1
        }
        
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DVST2_SDK_PATH="$vst2Path"
    
    - name: Build VST2 DLL
      run: |
        Write-Host "=== BUILDING COMPLETE VST2 DLL ==="
        cmake --build build --config Release --target FootstepDetector_VST --verbose
        
    - name: Package VST2 DLL
      run: |
        Write-Host "=== PACKAGING FINAL VST2 DLL ==="
        New-Item -ItemType Directory -Force -Path package
        
        # Find the VST2 DLL
        $dll = Get-ChildItem -Recurse build/ -Name "*FootstepDetector*.dll" | Select-Object -First 1
        if ($dll) {
          $dllPath = Join-Path "build" $dll
          Copy-Item $dllPath package/FootstepDetector.dll
          
          $dllSize = (Get-Item $dllPath).Length
          Write-Host "✅ VST2 DLL packaged successfully: $dll ($dllSize bytes)"
          
          # Create installation instructions
          @"
FootstepDetector VST2 for EqualizerAPO

INSTALLATION:
1. Copy FootstepDetector.dll to your VST plugin folder
2. In EqualizerAPO config.txt, add:
   VSTPlugin: "path\to\FootstepDetector.dll"
3. Restart audio applications

FEATURES:
- Automatic footstep detection
- Real-time amplification
- Optimized for Call of Duty
- Low latency processing

Build Date: $(Get-Date)
Platform: Windows x64
Format: VST2 (.dll)
"@ | Out-File -FilePath "package/INSTALLATION.txt" -Encoding utf8
          
        } else {
          Write-Host "❌ VST2 DLL not found"
          New-Item -Path "package/BUILD_FAILED.txt" -Value "DLL compilation failed" -Force
        }
        
    - name: Upload Final VST2 DLL
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-VST2-EqualizerAPO-COMPLETE
        path: package/
        retention-days: 30
