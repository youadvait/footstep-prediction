name: Build Windows VST2 (EqualizerAPO)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-vst2:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download JUCE 6.1.6 (Stable)
      run: |
        Write-Host "=== DOWNLOADING JUCE 6.1.6 FOR VST2 BUILD ==="
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/archive/refs/tags/6.1.6.zip" -OutFile "juce.zip" -TimeoutSec 120
        Expand-Archive juce.zip -DestinationPath . -Force
        if (Test-Path "JUCE") { 
          Write-Host "Removing existing JUCE directory..."
          Remove-Item JUCE -Recurse -Force 
        }
        Move-Item JUCE-6.1.6 JUCE
        Write-Host "✅ JUCE 6.1.6 setup completed"
        
    - name: Download VST2 SDK
      run: |
        Write-Host "=== DOWNLOADING VST2 SDK ==="
        # Download from multiple sources for reliability
        try {
          Invoke-WebRequest -Uri "https://github.com/steinbergmedia/vst3sdk/archive/refs/tags/v3.6.14.zip" -OutFile "vst3sdk.zip" -TimeoutSec 120
          Expand-Archive vst3sdk.zip -DestinationPath . -Force
          
          # Extract VST2 headers from VST3 SDK
          mkdir VST2_SDK -Force
          if (Test-Path "vst3sdk-3.6.14/pluginterfaces/vst2.x") {
            Copy-Item "vst3sdk-3.6.14/pluginterfaces/vst2.x" "VST2_SDK/" -Recurse -Force
            Write-Host "✅ VST2 SDK extracted from VST3 SDK"
          } else {
            throw "VST2 headers not found in VST3 SDK"
          }
        } catch {
          Write-Host "Primary VST2 SDK source failed, trying archive.org..."
          Invoke-WebRequest -Uri "https://archive.org/download/VST2_SDK/VST2_SDK.zip" -OutFile "vst2_archive.zip" -TimeoutSec 120
          Expand-Archive vst2_archive.zip -DestinationPath VST2_SDK -Force
        }
        
        # Verify VST2 SDK structure
        if (Test-Path "VST2_SDK/vst2.x/aeffect.h") {
          Write-Host "✅ VST2 SDK structure verified"
          dir VST2_SDK/vst2.x/
        } else {
          Write-Host "❌ VST2 SDK structure invalid"
          exit 1
        }
        
    - name: Verify JUCE Installation
      run: |
        Write-Host "=== VERIFYING JUCE INSTALLATION ==="
        if (Test-Path "JUCE/extras/Build/CMake/JUCEModuleSupport.cmake") {
          Write-Host "✅ JUCEModuleSupport.cmake found"
        } else {
          Write-Host "❌ JUCEModuleSupport.cmake missing"
          exit 1
        }
        
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup CMake
      uses: lukka/get-cmake@latest
      
    - name: Configure CMake for VST2
      run: |
        Write-Host "=== CONFIGURING CMAKE FOR VST2 BUILD ==="
        $vst2Path = "${{ github.workspace }}/VST2_SDK"
        Write-Host "VST2_SDK_PATH: $vst2Path"
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DVST2_SDK_PATH="$vst2Path"
        
    - name: Build VST2 Plugin
      run: |
        Write-Host "=== BUILDING VST2 PLUGIN ==="
        cmake --build build --config Release --target FootstepDetector_VST --parallel 4
        
    - name: Verify VST2 DLL Created
      run: |
        Write-Host "=== VERIFYING VST2 BUILD OUTPUT ==="
        $dllPath = "build/FootstepDetector_artefacts/Release/VST/FootstepDetector.dll"
        if (Test-Path $dllPath) {
          Write-Host "✅ FootstepDetector.dll built successfully"
          $dll = Get-Item $dllPath
          Write-Host "File Size: $($dll.Length) bytes"
          Write-Host "Last Modified: $($dll.LastWriteTime)"
          
          # Verify it's a valid Windows DLL
          $header = [System.IO.File]::ReadAllBytes($dllPath)[0..1]
          if ($header[0] -eq 77 -and $header[1] -eq 90) { # "MZ" header
            Write-Host "✅ Valid Windows PE executable"
          } else {
            Write-Host "❌ Invalid Windows executable format"
            exit 1
          }
        } else {
          Write-Host "❌ FootstepDetector.dll not found"
          Write-Host "Searching for any .dll files:"
          Get-ChildItem build -Recurse -Name "*.dll"
          Write-Host "Available build targets:"
          cmake --build build --target help
          exit 1
        }
        
    - name: Upload VST2 DLL
      uses: actions/upload-artifact@v4
      with:
        name: FootstepDetector-VST2-EqualizerAPO
        path: build/FootstepDetector_artefacts/Release/VST/FootstepDetector.dll
        
    - name: Create EqualizerAPO Package
      run: |
        Write-Host "=== CREATING EQUALIZERAPO PACKAGE ==="
        mkdir FootstepDetector_EqualizerAPO_Package
        copy build/FootstepDetector_artefacts/Release/VST/FootstepDetector.dll FootstepDetector_EqualizerAPO_Package/
        
        # Create comprehensive installation instructions
        